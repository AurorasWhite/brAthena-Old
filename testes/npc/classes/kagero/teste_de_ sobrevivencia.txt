//    ________________________________________________________
//   /                                                        \
//   |       _           _   _   _                            |
//   |      | |__  _ __ / \ | |_| |__   ___ _ __   __ _       |
//   |      | '_ \| '__/ _ \| __| '_ \ / _ \ '_ \ / _` |      |
//   |      | |_) | | / ___ \ |_| | | |  __/ | | | (_| |      |
//   |      |_.__/|_|/_/   \_\__|_| |_|\___|_| |_|\__,_|      |
//   |                                                        |
//   |                    brAthena Script                     |
//   |--------------------------------------------------------|
//   | Nome do Script: teste_de_sobrevivencia.txt             |
//   |--------------------------------------------------------|
//   | Criado por: M45T3R & Dastgir Pojee                     |
//   |--------------------------------------------------------|
//   | Versões brA: 1.1                                       |
//   |--------------------------------------------------------|
//   | Descrição: Teste de Sobrevivência.                     |
//   |--------------------------------------------------------|
//   | Changelog:                                             |
//   | 1.0 Primeira versão [Megasantos]                       |
//   | 1.1 Tradução PT-BR [Holy]                              |
//   |--------------------------------------------------------|
//   | - Anotações                                            |
//   \________________________________________________________/

function	script	KO_SD	{

	mes "Local: "+getarg(4);
	mes "Total de LP: "+LPOINTS+"";
	mes "Para rolar o dado, serão necessários "+getarg(5)+" LP.";
	next;
	if (select("Rolar o primeiro dado.") == 1){
		mes "< "+getarg(5)+" LP foram gastos >";
		set LPOINTS,LPOINTS-getarg(5);
		set @dice1,rand(1,6);
		next;
		emotion 57+@dice1,0;
		mes "O resultado do primeiro dado é "+@dice1+". Você deseja rolar o segundo dado?";
		next;
		if (select("Rolar o segundo dado.") == 1){
			set @dice2,rand(1,6);
			emotion 57+@dice2,0;
			mes "O resultado do segundo dado é "+@dice2+".";
		}
		if (getarg(0)==-1){
			if (@dice1!=@dice2){ mes "Você não obteve o mesmo resultado."; return;}
			else if (@dice1==@dice2){ mes "Você obteve o mesmo número. Pressione Close para se mover em 30 blocos."; close2; callfunc("KO_SW",31);}
		}
		else{
			next;
			set .@dresult,@dice1+@dice2;
			mes @dice1+" + "+@dice2+" = "+.@dresult;
			if (.@dresult<=getarg(2)){ 
				mes "Seu total é menor do que "+getarg(2)+". Pressione Close para mover "+getarg(3)+" blocos."; 
				close2;
				callfunc("KO_SW",getarg(3)+1);
			}
			else if (.@dresult>getarg(2)){ 
				if (getarg(1)==-2){
					mes "Seu total é maior do que "+getarg(0)+". Por favor, escolha uma célula para mover-se entre "+getarg(6)+" e "+getarg(7)+".";
					next;
					for (.@i = 1; .@i <= (getarg(7)-getarg(6)); .@i = .@i +1){
						if (.@i==1) .@menu$ = "Mover-se para a célula "+(getarg(7)-1+.@i)+".";
						else {.@menu$ = .@menu$+":Mover-se para a célula "+(getarg(7)-1+.@i)+".";}
					}
					set .@menu,select(.@menu$);
					close2;
					callfunc("KO_SW",1+.@menu+getarg(6));
				}
				else if(getarg(1)==-1){
					mes "Seu total é maior do que "+getarg(0)+".";
					callfunc("KO_SL",getarg(4),1);
					close2;
					callfunc("KO_SW",@dice+getarg(4)+1);
				}
				else{
					mes "Seu total é maior do que "+getarg(0)+".";
					callfunc("KO_SW",getarg(1)+1);
				}
				
			}
		}
	}

}

function	script	KO_SL	{
	mes "Role o dado.";
	next;
	mes "Local: "+getarg(0);
	mes "Total em LP: "+LPOINTS;
	mes "Para rolar o dado, serão necessários "+getarg(1)+" LP.";
	next;
	if (select("Rolar o dado.")==1){
		set LPOINTS, LPOINTS-getarg(1);
		set @dice, rand(1,6);
		emotion 57+@dice,0;
		mes "O dado resultou em "+@dice+".";
		mes "Pressione Close para avançar "+@dice+" blocos.";
	}
	return;
}
function	script	KO_SW	{
	switch(getarg(0)){
		case 1:	warp "job_ko",63,16; end;
		case 2:	warp "job_ko",54,16; end;
		case 3:	warp "job_ko",46,16; end;
		case 4:	warp "job_ko",38,16; end;
		case 5:	warp "job_ko",30,16; end;
		case 6:	warp "job_ko",22,16; end;
		case 7:	warp "job_ko",17,19; end;
		case 8:	warp "job_ko",17,27; end;
		case 9:	warp "job_ko",17,35; end;
		case 10:	warp "job_ko",17,43; end;
		case 11:	warp "job_ko",17,51; end;
		case 12:	warp "job_ko",17,60; end;
		case 13:	warp "job_ko",25,60; end;
		case 14:	warp "job_ko",33,60; end;
		case 15:	warp "job_ko",41,60; end;
		case 16:	warp "job_ko",49,60; end;
		case 17:	warp "job_ko",57,60; end;
		case 18:	warp "job_ko",62,56; end;
		case 19:	warp "job_ko",62,48; end;
		case 20:	warp "job_ko",62,40; end;
		case 21:	warp "job_ko",62,32; end;
		case 22:	warp "job_ko",62,24; end;
		case 23:	warp "job_ko",54,23; end;
		case 24:	warp "job_ko",46,23; end;
		case 25:	warp "job_ko",38,23; end;
		case 26:	warp "job_ko",30,23; end;
		case 27:	warp "job_ko",25,27; end;
		case 28:	warp "job_ko",25,35; end;
		case 29:	warp "job_ko",25,43; end;
		case 30:	warp "job_ko",25,52; end;
		case 31:	warp "job_ko",33,52; end;
		case 32:	warp "job_ko",41,52; end;
		case 33:	warp "job_ko",49,52; end;
		case 34:	warp "job_ko",54,48; end;
		case 35:	warp "job_ko",54,40; end;
		case 36:	warp "job_ko",54,31; end;
		case 37:	warp "job_ko",46,31; end;
		case 38:	warp "job_ko",38,31; end;
		case 39:	warp "job_ko",33,35; end;
		case 40:	warp "job_ko",33,44; end;
		case 41:	warp "job_ko",41,44; end;
	}
	return;
}

function	script	KO_SR	{
	mes "Pedra! Papel! Tesoura!";
	next;
	set .@player,select("Escolher tesoura.:Escolher pedra.:Escolher papel.");
	emotion (9+.@player),1;
	emotion (9+.@master),0;
	set .@master, rand(1,3);
	mes "= Resultado do Jogo =";
	mes "Máquina: "+((.@master==1)?"Tesoura":((.@master==2)?"Pedra":"Papel"))+".";
	mes "Você: "+((.@player==1)?"Tesoura":((.@player==2)?"Pedra":"Papel"))+".";
	if (.@master==.@player) {
		mes "Draw";
		if (getarg(2)==-1){callfunc("KO_SL",getarg(4),1); close2; callfunc("KO_SW",@dice+getarg(4)+1);}
		close2;
		callfunc("KO_SW",getarg(2)+1);
	} else if ( (.@player==1 && .@master==2) || (.@player==2 && .@master==3) || (.@player==3 && .@master==1) ) {
		mes "Você perdeu";
		if (getarg(1)==-1){callfunc("KO_SL",getarg(4),1); close2; callfunc("KO_SW",@dice+getarg(4)+1);}
		else{
			mes "Por favor pressione Close para mover-se até o "+getarg(1)+" blocos.";
			close2;
			callfunc("KO_SW",getarg(1)+1);
		}
	} else{
		mes "Você venceu";
		if (getarg(0)==-1){callfunc("KO_SL",getarg(4),1); close2; callfunc("KO_SW",@dice+getarg(4)+1);}
		else if (getarg(0)==-2){
			for (.@i = 1; .@i <= (getarg(5)-getarg(4)); .@i = .@i +1){
				if (.@i==1) .@menu$ = "Mover-se para a célula "+(getarg(5)-1+.@i)+".";
				else {.@menu$ = .@menu$+":Mover-se para a célula "+(getarg(5)-1+.@i)+".";}
			}
			set .@menu,select(.@menu$);
			close2;
			callfunc("KO_SW",1+.@menu+getarg(4));
			end;
		}
		else{
			mes "Pressione Close para avançar "+getarg(0)+" blocos.";
			close2;
			callfunc("KO_SW",getarg(0)+1);
		}
	}
}

job_ko,57,16,1	script	Instrução#ko_00	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	if (LREADYHR == 1){
		if (checkquest(5140)== 1) erasequest 5140;
		set LPOINTS, 100;
		mes "Você retornou para a primeira célula. Seu LP foi recuperado.";
		next;
	}
	switch(select("Ler a descrição.:Começar o teste.")){
		case 1:
			mes "O Teste de Sobrevivência começa a partir de agora e você possui 100 LPs para gastar e dados para avançar no teste.";
			next;
			mes "Todo o teste começa a partir do bloco 0 e vai até o 40 e cada bloco que você inicia pode conceder ou tirar LPs.";
			next;
			mes "Você precisa possuir algum LP quando chegar no final do teste.";
			next;
			mes "Mas! Você ainda passará no teste se o seu LP´chegar a 0 no bloco de chegada.";
			next;
			mes "As instruções do jogo terminam aqui. Tenha uma boa sorte.";
			close;

		case 2:
			if (checkquest(5140) == -1)setquest 5140;
			set LPOINTS, 100;
			set LREADYHR,1;
			mes "Você recebeu 100 Pontos de Life (LP).";
			next;
			callfunc("KO_SL",0,1);
			close2;
			callfunc("KO_SW",@dice+1);
			end;
	}
}

job_ko,49,16,1	script	Instrução#ko_01	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Você é muito ruim em rolar dados. Como você pode conseguir 1 desde o começo? Você pode mover-se até o bloco 9 se pagar 10 LPs.";
	next;
	switch(select("Utilizar 10 LPs:Rolar o dado.")){
		case 1:
			set LPOINTS, LPOINTS-10;
			mes "< 10 LPs Utilizados >";
			mes "Pressione Close para mover-se ao bloco 9.";
			close2;
			
			callfunc("KO_SW",10);
		case 2:
			callfunc("KO_SL",1,1);	
			close2;
			callfunc("KO_SW",@dice+2);
	}
}

job_ko,41,16,1	script	Instrução#ko_02	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é uma armadilha.";
	mes "Pressione Close para voltar ao bloco 0.";
	close2;
	callfunc("KO_SW",1);
}

job_ko,33,16,1	script	Instrução#ko_03	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Se você utilizar 5 LPs então você poderá resistir à uma maldição transmitida através de gerações.";
	next;
	switch(select("Utilizar 5 LPs")){
		case 1:
		mes "< 5 LPs foram utilizados >";
		set LPOINTS, LPOINTS-5;
		callfunc("KO_SL",3,1);	
		callfunc("KO_SW",@dice+4);
	}
}

job_ko,25,16,1	script	Instrução#ko_04	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Existem pequenas letras rabiscadas na placa.";
	next;
	if (.KO_WH$!="") {
		mes .KO_WH$+" esteve aqui.";
		next;
	}
	mes "Gostaria de deixar seu nome para vê-lo em uma ocasião especial?";
	next;
	switch(select("Utilizar 5 LPs e gravar seu nome.:Continuar a rolar o dado.")){
		case 1:
			mes "< 5 LPs foram utilizados >";
			set LPOINTS,LPOINTS-5;
			next;
			set .KO_WH$,"strcharinfo(0)";
			mes strcharinfo(0)+" esteve aqui.";
			mes "Você gravou seu nome.";
			callfunc("KO_SL",4,1);	
			close2;
			callfunc("KO_SW",@dice+5);
			
		case 2:
			mes "Role o dado.";
			next;
			callfunc("KO_SL",4,1);	
			close2;
			callfunc("KO_SW",@dice+5);
	}
}

job_ko,17,16,1	script	Instrução#ko_05	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	if (checkquest(5141,PLAYTIME) == 0){
		mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
		close;
	}
	if (checkquest(5141,PLAYTIME) == 2){
		mes "A maldição e a imobilização foram removidas..";
		erasequest 5141;
		callfunc("KO_SL",5,1);
		callfunc("KO_SW",@dice+6);
	}
	mes "Há letras minúsculas na placa.";
	next;
	mes "Se você não utilizar 5 LPs, você será amaldiçoado e imobilizado por 2 minutos.";
	next;
	switch(select("Utilizar 5 LPs:Não pagar.")){
		case 1:
			mes "< 5 LPs utilizados >";
			set LPOINTS,LPOINTS-5;
			callfunc("KO_SL",5,1);
			callfunc("KO_SW",@dice+6);
			
		case 2:
			setquest 5141;
			mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
			close;
	}
}

job_ko,17,24,1	script	Instrução#ko_06	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é amaldiçoado.";
	mes "Você recuperou 7 LP.";
	mes "Não é possível ultrapassar o limite de 100 LP.";
	next;
	if (!@recover){
		if (LPOINTS<94) set LPOINTS,LPOINTS+7;
		else if (LPOINTS>93) set LPOINTS,100;
		mes "< Recover "+((LPOINTS==100)?"":"7")+" LP >";
		set @recover,1;
	}
	callfunc("KO_SL",6,1);
	close2;
	set @recover,0;
	callfunc("KO_SW",@dice+7);
}

job_ko,17,32,1	script	Instrução#ko_07	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é uma armadilha.";
	mes "Pressione Close para voltar ao bloco 5.";
	close2;
	callfunc("KO_SW",6);
}

job_ko,17,40,1	script	Instrução#ko_08	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Máquina de Pedra-Papel e Tesoura.";
	mes "Se você ganhar, irá para o bloco 15.";
	mes "Se você empatar, rolará o dado.";
	mes "Se você perder, será movido para o bloco 0.";
	next;
	callfunc("KO_SR",15,0,-1,8,0,0);	
}

job_ko,17,48,1	script	Instrução#ko_09	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Please proceed.";
	next;
	callfunc("KO_SL",9,1);
	close2;
	callfunc("KO_SW",@dice+10);
}

job_ko,17,56,1	script	Instrução#ko_10	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Você está preso na armadilha instalada.";
	next;
	if (.trap){
		mes "Você está preso na armadilha instalada.";
		mes "Pressione Close para voltar ao bloco 0.";
		set .trap,0;
		close2;
		callfunc("KO_SW",1);
	}
	mes "Não há atualmente nenhuma armadilha instalada.";
	mes "Você deseja utilizar 10 LPs para instalar uma armadilha?";
	switch(select("Instalar uma armadilha.:Rolar o dado.")){
		case 1:
			mes "< 10 LPs Utilizados >";
			mes "A armadilha está instalada. Por favor role o dado.";
			set .trap,1;
			set LPOINTS,LPOINTS-10;
			next;
			callfunc("KO_SL",10,1);
			callfunc("KO_SW",@dice+11);
			
		case 2:
			callfunc("KO_SL",10,1);
			callfunc("KO_SW",@dice+11);
	}
}

job_ko,22,60,1	script	Instrução#ko_11	858,1,1,{
mes "Há letras minúsculas na placa.";
next;
mes "Este bloco é uma armadilha.";
mes "Pressione Close para voltar ao bloco 9.";
close2;
callfunc("KO_SW",10);
}

job_ko,30,60,1	script	Instrução#ko_12	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Máquina de Pedra-Papel e Tesoura.";
	mes "Se você ganhar, irá para o bloco 20.";
	mes "Se você empatar, rolará o dado.";
	mes "Se você perder, será movido para o bloco 9.";
	next;
	callfunc("KO_SR",20,9,-1,12,0,0);
}

job_ko,38,60,1	script	Instrução#ko_13	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é amaldiçoado.";
	mes "Você recuperou 7 LP.";
	mes "Não é possível ultrapassar o limite de 100 LP.";
	next;
	if (!@recover){
		if (LPOINTS<94) set LPOINTS,LPOINTS+7;
		else if (LPOINTS>93) set LPOINTS,100;
		mes "< Recover "+((LPOINTS==100)?"":"7")+" LP >";
		set @recover,1;
	}
	callfunc("KO_SL",13,1);
	close2;
	set @recover,0;
	callfunc("KO_SW",@dice+14);
}

job_ko,46,60,1	script	Instrução#ko_14	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	if (checkquest(5141,PLAYTIME) == 0){
		mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
		close;
	}
	if (checkquest(5141,PLAYTIME) == 2){
		mes "A maldição e a imobilização foram removidas..";
		erasequest 5141;
		callfunc("KO_SL",5,1);
		callfunc("KO_SW",@dice+6);
	}
	mes "Há letras minúsculas na placa.";
	next;
	mes "Se você não utilizar 5 LPs, você será amaldiçoado e imobilizado por 2 minutos.";
	next;
	switch(select("Utilizar 5 LPs:Não utilizar.")){
		case 1:
			mes "< 5 LPs utilizados >";
			set LPOINTS,LPOINTS-5;
			callfunc("KO_SL",14,1);
			callfunc("KO_SW",@dice+15);
		case 2:
			setquest 5141;
			mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
			close;
	}
}

job_ko,54,60,1	script	Instrução#ko_15	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	if (checkquest(5141,PLAYTIME) == 0){
		mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
		close;
	}
	if (checkquest(5141,PLAYTIME) == 2){
		mes "A maldição e a imobilização foram removidas..";
		erasequest 5141;
		callfunc("KO_SL",5,1);
		close2;
		callfunc("KO_SW",@dice+6);
	}
	mes "Há letras minúsculas na placa.";
	next;
	mes "Você foi amaldiçoado por uma poderosa maldição gravitacional por 2 minutos.";
	setquest 5141;
	close;
}

job_ko,62,60,1	script	Instrução#ko_16	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Consome 2 LPs e rola o dado duas vezes.";
	mes "Se você conseguir o mesmo número, você será movido para o bloco 30, se os números forem diferentes você deverá gastar mais 2 LPs para rolar o dado novamente... Até que você consiga números iguais.";
	next;
	while(1){
		callfunc("KO_SD",-1,30,-1,-3,16,2,0,0);
	}
}

job_ko,62,51,1	script	Instrução#ko_17	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Área amaldiçoada com 10 vezes mais gravidade do que o normal. Você irá precisar de 10 LPs para rolar o dado.";
	callfunc("KO_SL",17,10);
	close2;
	callfunc("KO_SW",@dice+18);
}

job_ko,62,43,1	script	Instrução#ko_18	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Consome 2 LPs e rola o dado duas vezes.";
	mes "Se os números forem iguais e menores que 5, você será movido para o bloco 30, se iguais e maiores que 5, será movido para o bloco 19.";
	callfunc("KO_SD",5,19,5,30,18,2,0,0);


}

job_ko,62,35,1	script	Instrução#ko_19	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Move forward.";
	callfunc("KO_SL",19,1);
	close2;
	callfunc("KO_SW",@dice+20);
}

job_ko,62,27,1	script	Instrução#ko_20	909,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é amaldiçoado.";
	mes "Você recuperou 7 LP.";
	mes "Não é possível ultrapassar o limite de 100 LP.";
	next;
	if (!@recover){
		if (LPOINTS<94) set LPOINTS,LPOINTS+7;
		else if (LPOINTS>93) set LPOINTS,100;
		mes "< Recover "+((LPOINTS==100)?"":"7")+" LP >";
		set @recover,1;
	}
	callfunc("KO_SL",20,1);
	close2;
	set @recover,0;
	callfunc("KO_SW",@dice+21);
}

job_ko,57,23,1	script	Instrução#ko_21	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Área amaldiçoada com 10 vezes mais gravidade do que o normal. Você irá precisar de 10 LPs para rolar o dado.";
	callfunc("KO_SL",21,10);
	close2;
	callfunc("KO_SW",@dice+22);
}

job_ko,49,23,1	script	Instrução#ko_22	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	if ($KO_SO == 1){
		mes "Alguém deixou LPs para você.";
		mes "Você irá passar diretamente no teste";
		close2;
		set $KO_SO,0;
		callfunc("KO_SW",41);
	}
	mes "Gaste todos os seus LPs restantes e volte para o bloco.";
	next;
	mes "Você deseja deixar seus LPs?";
	mes "Se você deixar seus Lps, em seguida, a próxima pessoa que chegar no teste poderá passar diretamente.";
	switch(select("Deixar todos os seus LPs.:Continuar a rolar o dado.")){
		case 1:
			set $KO_SO,1;
			mes "Deixe todos os seus pontos aqui.";
			mes "Pressione Close e volte para o bloco 0.";
			set LPOINTS,0;
			close2;
			callfunc("KO_SW",1);
			end;
		
		case 2:
			callfunc("KO_SL",22,1);
			close2;
			callfunc("KO_SW",@dice+23);
			end;
	}
}

job_ko,41,23,1	script	Instrução#ko_23	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é uma armadilha.";
	mes "Pressione Close para voltar ao bloco 18.";
	close2;
	callfunc("KO_SW",19);
	end;
	
}

job_ko,33,23,1	script	Instrução#ko_24	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Consome 2 LPs e rola o dado duas vezes.";
	next;
	mes "Se a soma dos dois números dos dois dados forem maior do que 8, então você poderá se mover para qualquer bloco entre 25 e 30. Mas! Se a soma for inferior a 8, você voltará para o bloco 19.";
	next;
	callfunc("KO_SD",8,-2,8,19,24,2,25,30);
}

job_ko,25,23,1	script	Instrução#ko_25	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	if (checkquest(5141,PLAYTIME) == 0){
		mes "Não é possível se mover, você está amaldiçoado.";
		close;
	}
	if (checkquest(5141,PLAYTIME) == 2){
		mes "A maldição e a imobilização foram removidas..";
		erasequest 5141;
		callfunc("KO_SL",25,1);
		close2;
		callfunc("KO_SW",@dice+26);
	}
	mes "Há letras minúsculas na placa.";
	next;
	mes "Isso é ridículo.";
	mes "Não é possível ler o que está escrito. Deve haver alguma maneira de ler...";
	switch(select("Tentar algo:Não fazer nada.")){
		case 1:
			next;
			mes "Tente uma piada em Prontera.";
			next;
			setquest 5141;
			mes "Você foi amaldiçoado e imobilizado durante 2 minutos.";
			close;
			
			
		case 2:
			next;
			mes "Nada aconteceu. Ainda preciso fazer alguma coisa.";
			close;
	}
}

job_ko,25,32,1	script	Instrução#ko_26	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é uma armadilha.";
	mes "Pressione Close para voltar ao bloco 20.";
	close2;
	callfunc("KO_SW",21);
	end;
	
}

job_ko,25,40,1	script	Instrução#ko_27	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é amaldiçoado.";
	mes "Você recuperou 7 LP.";
	mes "Não é possível ultrapassar o limite de 100 LP.";
	next;
	if (!@recover){
		if (LPOINTS<94) set LPOINTS,LPOINTS+7;
		else if (LPOINTS>93) set LPOINTS,100;
		mes "< Recover "+((LPOINTS==100)?"":"7")+" LP >";
		set @recover,1;
	}
	callfunc("KO_SL",27,1);
	close2;
	set @recover,0;
	callfunc("KO_SW",@dice+28);
}

job_ko,25,48,1	script	Instrução#ko_28	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Se você não quer ser pego, instale uma armadilha.";
	next;
	if (.trap){
		mes "Você está preso na armadilha instalada.";
		mes "Pressione Close para voltar ao bloco 0.";
		set .trap,0;
		close2;
		callfunc("KO_SW",1);
	}
	mes "Não há atualmente nenhuma armadilha instalada.";
	mes "Você deseja utilizar 10 LPs para instalar uma armadilha?";
	switch(select("Instalar uma armadilha.:Rolar o dado.")){
		case 1:
			mes "< 10 LP Utilizados >";
			mes "A armadilha está instalada. Por favor role o dado.";
			set .trap,1;
			set LPOINTS,LPOINTS-10;
			next;
			callfunc("KO_SL",28,1);
			close2;
			callfunc("KO_SW",@dice+29);
			
		case 2:
			callfunc("KO_SL",28,1);
			close2;
			callfunc("KO_SW",@dice+29);
	}
}

job_ko,30,52,1	script	Instrução#ko_29	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Vá em frente.";
	callfunc("KO_SL",29,1);
	close2;
	callfunc("KO_SW",@dice+30);
	end;
}

job_ko,38,52,1	script	Instrução#ko_30	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é uma armadilha.";
	mes "Pressione Close para voltar ao bloco 9.";
	close2;
	callfunc("KO_SW",10);
	end;
	
}

job_ko,46,52,1	script	Instrução#ko_31	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	if (checkquest(5141,PLAYTIME) == 0){
		mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
		close;
	}
	if (checkquest(5141,PLAYTIME) == 2){
		mes "A maldição e a imobilização foram removidas..";
		erasequest 5141;
		callfunc("KO_SL",5,1);
		callfunc("KO_SW",@dice+6);
	}
	mes "Há letras minúsculas na placa.";
	next;
	mes "Se você não utilizar 5 LPs 5 LP, você será amaldiçoado e imobilizado por 2 minutos.";
	next;
	switch(select("Utilizar 5 LPs:Não utilizar.")){
		case 1:
			mes "< 5 LPs utilizados >";
			set LPOINTS,LPOINTS-5;
			callfunc("KO_SL",31,1);
			close2;
			callfunc("KO_SW",@dice+32);
			
		case 2:
			setquest 5141;
			mes "Você está amaldiçoado e não pode se mover para nenhum bloco durante 2 minutos.";
			close;
	}

}

job_ko,46,52,1	script	Instrução#ko_32	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Máquina de Pedra-Papel e Tesoura.";
	mes "Se você vencer, você será movido entre os blocos 33 ao 38, se você perder ou se empatar, você será movido para o bloco 0.";
	callfunc("KO_SR",-2,0,0,32,33,38);
}

job_ko,54,43,1	script	Instrução#ko_33	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Você poderá ser movido para o bloco 39 se você pagar com todos os seus pontos, exceto o último LP que te permitirá rolar os dados mais uma vez.";
	switch(select("Utilizar LPs.:Avançar.")){
		case 1:
			next;
			set @temp,LPOINTS-1;
			set LPOINTS,1;
			mes "<"+@temp+" LPs utilizados >";
			mes "Pressione Close para mover-se até o bloco 39.";
			close2;
			callfunc("KO_SW",40);
			end;
			
		case 2:
			callfunc("KO_SL",33,1);
			close2;
			callfunc("KO_SW",@dice+34);
			end;
	}
}

job_ko,54,35,1	script	Instrução#ko_34	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco é amaldiçoado.";
	mes "Você recuperou 7 LPs.";
	mes "Não é possível ultrapassar o limite de 100 LP.";
	next;
	if (!@recover){
		if (LPOINTS<94) set LPOINTS,LPOINTS+7;
		else if (LPOINTS>93) set LPOINTS,100;
		mes "< "+((LPOINTS==100)?"":"7")+" LPs Recuperados >";
		set @recover,1;
	}
	callfunc("KO_SL",34,1);
	close2;
	set @recover,0;
	callfunc("KO_SW",@dice+35);
}

job_ko,49,31,1	script	Instrução#ko_35	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Este bloco possui uma armadilha.";
	mes "Pressione Close para voltar ao bloco 29.";
	close2;
	callfunc("KO_SW",30);
	end;
}

job_ko,41,31,1	script	Instrução#ko_36	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Existem apenas 4 blocos à esquerda antes do último bloco.";
	next;
	mes "Regra 1 (Rolando Dados - Normal)";
	mes "Você passará se o resultado gerado pelo dado for 4 ou maior, porém não se sabe o resultado que o dado gerará.";
	next;
	mes "Regra 2";
	mes "Se for gerado 1, 2, o 3 você será movido para o ponto de chegada, se: 4, 5, ou 6 você pode escolher e se mover para o bloco 29.";
	mes "next;";
	switch(select("Experimentar outro caminho.:Ir pela regra.")){
		case 1:
			mes "O outro caminho (Regra 2)";
			callfunc("KO_SD",3,29,3,40,36,1,0,0);
			end;
		case 2:
			callfunc("KO_SL",36,1);
			close2;
			if (@dice >= 4){callfunc("KO_SW",@dice+37);}
			else{callfunc("KO_SW",@dice+37);}
			end;
	}
}

job_ko,33,31,1	script	Instrução#ko_37	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Existem apenas 4 blocos à esquerda antes do último bloco.";
	mes "se for gerado 1, 3, ou 5, você será movido para o ponto de chegada, se: 2, 4, ou 6, você irá retornar para o ponto de início.";
	callfunc("KO_SL",37,1);
	next;
	if (@dice%2 == 0){
		mes "Pressione Close para voltar para retornar ao ponto de início.";
		close2;
		callfunc("KO_SW",1);
		end;
	}
	else if (@dice%2 == 1){
		mes "Pressione Close para ir até o último bloco.";
		close2;
		callfunc("KO_SW",41);
		end;
	}
}

job_ko,38,44,1	script	Instrução#ko_39	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Agora há apenas um bloco à esquerda antes do fom. Parabéns por tudo o que você passou até chegar aqui.";
	next;
	mes "Mas tenha cal,a. Se você tirar um 3, você voltará para o bloco 3.";
	callfunc("KO_SL",39,1);
	if (@dice==3){
		mes "Pressione Close para retornar ao bloco 3.";
		close2;
		callfunc("KO_SW",4);
	}
	else{
		mes "Pressione Close para ir até o bloco de chegada.";
		close2;
		callfunc("KO_SW",41);
	}
}

job_ko,46,41,1	script	Instrução#ko_40	858,1,1,{
mes "Algumas letras são pequenas demais para se ler. Veja de perto..";
close;

OnTouch:
	mes "Há letras minúsculas na placa.";
	next;
	mes "Para aqueles que estão se preparando para um novo rumo...";
	mes "Meio caminho já está adiantado. No entanto, lembre-se sempre que não é o fim.";
	next;
	mes "Leia todos os textos das placas. Você irá saber como prosseguir.";
	next;
	set KOHS,KOHS+1;
	set KO_QSCC,1;
	if (KO_QKCC == 1 && KO_QSCC == 1 || KO_QKCC == 1 && KO_QWCC == 1 || KO_QSCC == 1 && KO_QKCC == 1 || KO_QSCC == 1 && KO_QWCC == 1 || KO_QWCC == 1 && KO_QSCC == 1 || KO_QWCC == 1 && KO_QKCC == 1)
	set KOLQ,"Survival";
	completequest 5137;
	completequest 5140;
	warp "job_ko",35,113;

}