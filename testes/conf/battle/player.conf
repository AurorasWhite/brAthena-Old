//    ________________________________________________________	
//   /                                                        \	
//   |       _           _   _   _                            |	
//   |      | |__  _ __ / \ | |_| |__   ___ _ __   __ _       |	
//   |      | '_ \| '__/ _ \| __| '_ \ / _ \ '_ \ / _` |      |	
//   |      | |_) | | / ___ \ |_| | | |  __/ | | | (_| |      |	
//   |      |_.__/|_|/_/   \_\__|_| |_|\___|_| |_|\__,_|      |	
//   |                                                        |	
//   |                    brAthena Script                     |	
//   |--------------------------------------------------------|	
//   | Nome do Script: player.conf                            |	
//   |--------------------------------------------------------|	
//   | Criado por: eA/rA/brA Dev. Team                        |	
//   |--------------------------------------------------------|	
//   | Versões eA/rA/brA: 1.1/1.0                             |	
//   |--------------------------------------------------------|	
//   | Descrição: Configurações de Jogadores.                 |	
//   |--------------------------------------------------------|	
//   | Changelog:                                             |	
//   | 1.0 Cabeçalho e Tradução [Megasantos]                  |
//	 |--------------------------------------------------------|	
//   | - Anotações                                            |	
//   | Nota 2: Valor em porcentagem (100 para 100%).          |
//   \________________________________________________________/	

// Configuração que define a taxa de HP máximo para jogadores. (Padrão: 100)
hp_rate: 100

// Configuração que define a taxa de SP máximo para jogadores. (Padrão: 100)
sp_rate: 100

// Configuração que define se cartas que dão atributos a mão esquerda serão aplicados na mão direita? (Nota 1)
// (Padrão 'yes' nos servidores oficiais)
left_cardfix_to_right: yes

// Configuração que define com quanto de HP o personagem renascerá. 0 é o padrão.
// (Isto se refere a porcentagem total do HP, 100 é o HP total, 0 é 1 porcento do HP total.)
restart_hp_rate: 0

// Configuração que define com quanto de SP o personagem renascerá. 0 é o padrão.
// (Isto se refere a porcentagem total do SP, 100 é o SP total, 0 é 1 porcento do SP total.)
restart_sp_rate: 0

// Configuração que define se um jogador normal pode ultrapassar a árvore de habilidades? (Nota 1)
player_skillfree: no

// Configuração que configura a utilização dos pontos de primeira classe. Quando se utiliza "yes", obrigará que os pontos de habilidades da primeira classe sejam utilizados, como aprendizes que precisam das habilidades básicas. (Nota 1)
player_skillup_limit: yes

// Configuração que define se as habilidades de quests podem ser aprendidas. (Nota 1)
// Contra-indicado: Modificando para "yes" trará problemas para o seu servidor!
quest_skill_learn: no

// Configuração que define se quando as habilidades são resetadas, se as habilidades de quest também são. (Nota 1)
// Contra-indicado: Pondo "yes" pode ocorrer exploits de reset!
// NOTA: Se o quest_skill_learn estiver como yes, as habilidades de quest sempre serão resetadas.
quest_skill_reset: no

// Configuração que define se você precisará das habilidades básicas para sentar, fazer uma negociação, formar um grupo ou criar um chat. (Nota 1)
basic_skill_check: yes

// Configuração que define se quando teleportado, ou renascido em um mapa, quanto tempo um monstro demorará pra ver você se você não se mexer. (em ms)
// Isso é, quando você não se mover, quanto tempo o monstro demora pra te perceber.
// Se você atacar o monstro, ele ignorará essa opção.
player_invincible_time: 5000

// Configuração que define o tempo de intervalo para recuperação do HP. (em ms)
natural_healhp_interval: 6000

// Configuração que define o tempo de intervalo para recuperação do SP. (em ms)
natural_healsp_interval: 8000

// Configuração que define o tempo de intervalo das habilidades de auto-cura. (em ms)
natural_heal_skill_interval: 10000

// Configuração que define o peso máximo que um personagem pode carregar sem que seu HP pare de se recuperar normalmente. (em %)
natural_heal_weight_rate: 50

// Configuração que define a velocidade de ataque máxima. (Padrão 190, Máxima 199)
max_aspd: 190

// Configuração que define a velocidade de ataque máxima para 3rd classes. (Padrão 193, Máxima 199)
max_third_aspd: 193

// Configuração que define a velocidade máxima ao andar (200 é o dobro da velocidade normal)
max_walk_speed: 300

// Configuração que define o HP máximo. (Padrão: 1000000)
max_hp: 1000000

// Configuração que define o SP máximo. (Padrão: 1000000)
max_sp: 1000000

// Configuração que define o limite máximo para os atributos. (agilidade, força, etc.)
max_parameter: 99

// Configuração que define o limite máximo para os atributos para Terceiras Classes.
max_third_parameter: 120

// Configuração que define o limite máximo de atributos para classes bebês.
max_baby_parameter: 80

// Configuração que define o limite máximo de atributos para Terceiras Classes Bebês.
max_baby_third_parameter: 108

// Configuração que define a Máxima def/defMágica.
// NOTA: does not affects habilidades and status effects like Mental Strength.
// Se weapon_defense_type é diferente de zero, it won't apply to max def.
// Se magic_defense_type é diferente de zero, it won't apply to max mdef.
max_def: 99

// Configuração que define o bônus de conversão de Def para Def2. Se a def/defM da armadura exceder a defesa máxima, o restante é convertido em vit -> def/int -> mdef  usando esse multiplicador.
// (exemplo: se o valor for 10, todo ponto extra será convertido em 10 pontos extras para vit)
over_def_bonus: 0

// Configuração que define o peso máximo que os carrinhos suportam.
max_cart_weight: 8000

// Configuração que define o tempo para prevenir que jogadores desloguem quando sofrerem algum tipo de ataque. (em ms, 0 desativa)
prevent_logout: 10000

// Configuração que define se deve mostrar o valor de hp/sp ganho ao se usar ataques normais? (Exemplo: Carta Mosca Caçadora)
show_hp_sp_drain: no

// Configuração que define se deve mostrar o valor de hp/sp ganho quando se mata um monstro? (Exemplo: Carta Exterminador)
show_hp_sp_gain: yes

// Configuração que define se amigos devem ser aceitos automaticamente.
// Se definido como 'yes', quando o jogador A aceita B como amigo, B vai estar também adicionando A na sua lista de amizade,
// ao contrário, apenas A apareceria na lista de amigos do jogador B.
// NOTA: esta opção habilita o aceitar amigos automáticamente; auto rejeitar não está funcionando.
friend_auto_add: yes

// Configuração que define se jogadores podem receber várias propostas (troca/grupo/clã) ao mesmo tempo. (Nota 1)
invite_request_check: yes

// Configuração que define se os jogadores deixarão cair uma caveira quando morrerem?
// 0 - Desabilitado
// 1 - Deixarão cair em mapas PvP
// 2 - Deixarão cair em todas situações
bone_drop: 0

// Configuração que define se os personagens em Pecos terão seu tamanho aumentado?
// 0 = Não
// 1 = Somente as Classes Normais terão tamanho grande
// 2 = Apenas as Classes bêbes terão o tamanho médio
// 3 = Tanto as Classes normais terão tamanho grande
// quanto as Classes bêbes terão tamanho médio
character_size: 0

// Configuração que define se os personagens inativos (idle) podem receber autoloot?
// Definir o tempo em segundos em que um personagem irá parar de receber items do autoloot. (0: desabilitado)
idle_no_autoloot: 0

// Configuração que define a distância mínima que um mercador deve ter de um NPC.
// Padrão: 3 (0: desativado). 
min_npc_vending_distance: 3