//  ___________________________________________________________________________
// /									       \
// |      	     _           _   _   _             				|
// |		    | |__  _ __ / \ | |_| |__   ___ _ __   __ _ 		|
// |      	    | '_ \| '__/ _ \| __| '_ \ / _ \ '_ \ / _` |		|
// |      	    | |_) | | / ___ \ |_| | | |  __/ | | | (_| |		|
// |		    |_.__/|_|/_/   \_\__|_| |_|\___|_| |_|\__,_|		|
// |										|
// |				  brAthena Script				|
// |----------------------------------------------------------------------------|
// | Nome do Script: exp.conf							|
// |----------------------------------------------------------------------------|
// | Criado por: eA/brA Dev. Team						|
// |----------------------------------------------------------------------------|
// | Descrição: Configurações de Experiência.					|
// |----------------------------------------------------------------------------|
// | Changelog:									|
// | 1.0 Modificação [brAthena]							|
// | - Anotações								|
// | Nota 1: Valor optativo (on/off, yes/no ou 1/0)				|
// | Nota 2: Valor em porcentagem (100 para 100%)				|
// \___________________________________________________________________________/

// Taxa em que a EXP de base é concedida (Note 2)
base_exp_rate: 100

// Taxa em que a EXP de job é concedida. (Note 2)
job_exp_rate: 100

// Ative essa opção para que o jogador possa passar mais de um nível de uma vez. (Note 1)
multi_level_up: no

// Setting this can cap the max experience one can get per kill specified as a
// % of the current exp bar. (Every 10 = 1.0%)
// For example, set it to 500 and no matter how much exp the mob gives, 
// it can never give you above half of your current exp bar.
max_exp_gain_rate: 0

// Method of calculating earned experience when defeating a monster:
// 0 = uses damage given / total damage as damage ratio
// 1 = uses damage given / max_hp as damage ratio
// NOTE: Using type 1 disables the bonus where the first attacker gets 
//       his share of the exp doubled when multiple people attack the mob.
exp_calc_type: 0

// Experience increase per attacker. That is, every additional attacker to the
// monster makes it give this much more experience
// (eg: 5 people attack with 25 here, +(25*4)% -> +100% exp)
exp_bonus_attacker: 25

// Max number of attackers at which exp bonus is capped
// (eg: if set at 5, the max bonus is 4*bonus-per-char regardless of attackers)
exp_bonus_max_attacker: 12

// Taxa de EXP bônus concedida por MVPs. (Note 2)
mvp_exp_rate: 100

// Taxa de EXP de base/job concedida por NPCs. (Note 2)
quest_exp_rate: 100

// Taxa de EXP de job, concedida pela habilidade Curar (100 é o mesmo que a quantidade da cura, 200 é o drobro.
// O balanço da taxa de EXP é melhor de 5 a 10)
heal_exp: 0

// Taxa de experiência ganha no processo de ressurreição, 1 = 0,01%
// Experience calculations for the experience value * level difference of the person revived / 100 * resurrection_exp/10000 which the revived player has can be got.
resurrection_exp: 0

// Taxa de EXP de job quando se usa a habilidade Desconto?
// (in 0.01% increments - 100 is 1%, 10000 is normal, 20000 is double.)
// The way it is calculated is (money received * skill lv) * shop_exp / 10000.
shop_exp: 0

// Jogadores podem ganhar EXP no PVP ?
// (Nota: Não EXP dos jogadores, mas EXP normal de nivelamento)
pvp_exp: yes

// Quando um jogador morre, como deve ser penalizado?
// 0 = Sem penalidade.
// 1 = Perde uma % do nível atual.
// 2 = Perde uma % da experiência total.
death_penalty_type: 1

// Taxa de penalidade da EXP de base (Cada 100 equivale a 1% da experiência)
death_penalty_base: 100

// Taxa de penalidade da EXP de job (Cada 100 equivale a 1% da experiência)
death_penalty_job: 100

// Quando um jogador morre, quanto de zeny ele deve ser penalizado ?
// Nota: é uma porcentagem de seus zenys, então 100 = 1%
zeny_penalty: 0

// Mostrar a experiência adquirida ao matar um monstro? (Nota 1)
disp_experience: no

// Mostrar o zeny ganho? (de mobs, trocas, etc) (Nota 1)
disp_zeny: no

// Usar o conteúdo do db/statpoint.txt quando resetar os atributos ou passar de nível? (Note 1)
// Se 'no', uma equação será utilizada para guardar os pontos ganhos/perdidos
// através de meios externos (ie: stat point buyers/sellers)
use_statpoint_table: yes

// Habilita o uso da db/statpoint_.txt "3x Stats 99" para maior distribuição de Atributos, 
// como alternativa aos servidores de rate alta que demandam edição de tabelas e hexed, 
// evitando o aumento além da clássica fórmula 99'. Deseja ativar? (Note 1)
// OBS: Se desejar usar esta opção selecione use_statpoint_table como 'no'
use_statpoint2_table: no