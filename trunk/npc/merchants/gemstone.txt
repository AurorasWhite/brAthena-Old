//  ________________________________________________________
// /                                                        \
// |       _           _   _   _                            |
// |      | |__  _ __ / \ | |_| |__   ___ _ __   __ _       |
// |      | '_ \| '__/ _ \| __| '_ \ / _ \ '_ \ / _` |      |
// |      | |_) | | / ___ \ |_| | | |  __/ | | | (_| |      |
// |      |_.__/|_|/_/   \_\__|_| |_|\___|_| |_|\__,_|      |
// |                                                        |
// |                    brAthena Script                     |
// |--------------------------------------------------------|
// | Nome do Script: Gemstone trader						|
// |--------------------------------------------------------|
// | Criado por: eA/brA Dev. Team                           |
// |--------------------------------------------------------|
// | Versões eA/brA: 1.2/1.0                                |
// |--------------------------------------------------------|
// | Descrição:	Trade various colors of gemstones for other |
// | color gemstones.										|
// |--------------------------------------------------------|
// | Changelog:               	                            |
// | 1.0 Modificação [Autor]		                        |
// | - Anotações		   			    					| 
// \________________________________________________________/

payon,173,238,5	script	Jade#pay	754,{
	if (checkweight(1201,1) == 0) {
		mes "^3355FFWait a second! Right now, you're carrying too many items with you. Please come back after putting some of your things into Kafra Storage.^000000";
		close;
	}
	mes "[Jade]";
	mes "Bring me two";
	mes "Gemstones of the";
	mes "same color, and I will";
	mes "change them to Gemstones";
	mes "of a different color.";
	next;
	switch(select("Blue Gemstones into Red ones!:Red Gemstones into Yellow ones!:Yellow Gemstones into Blue ones!")) {
	case 1: callsub S_TradeGems,717,716;
	case 2: callsub S_TradeGems,716,715;
	case 3: callsub S_TradeGems,715,717;
	}

S_TradeGems:
	if (countitem(getarg(0)) < 2) {
		mes "[Jade]";
		mes "Hah...!";
		mes "You're kidding me, right?";
		mes "I can't provide you with this";
		mes "service if you don't";
		mes "give me at least";
		mes "2 "+getitemname(getarg(0))+"s!";
		close;
	}
	else {
		set .@gems,countitem(getarg(0))/2;
		mes "[Jade]";
		mes "I believe I can create";
		mes "a total of " + .@gems + " " + getitemname(getarg(1)) + "s";
		mes "using the "+getitemname(getarg(0))+"s";
		mes "that you currently have.";
		mes "What do you want to do?";
		next;
		switch(select("Give me as many as you can.:I want to set the amount.:I quit.")) {
		case 1:
			delitem getarg(0),.@gems * 2;
			getitem getarg(1),.@gems;
			mes "[Jade]";
			mes "There you go.";
			mes "Feel free to come";
			mes "back any time.";
			mes "Hm, what's that look for?";
			mes "Is there something on my face?";
			close;
		case 2:
			mes "[Jade]";
			mes "So how many";
			mes "do you want?";
			mes "The maximum number";
			mes "that you can enter is 100.";
			next;
			while(1) {
				input .@input,0,101;
				if (.@input == 0) {
					mes "[Jade]";
					mes "None at all?";
					mes "I guess you";
					mes "changed your mind...";
					close;
				}
				else if (.@input > 100) {
					mes "[Jade]";
					mes "Errm...";
					mes "I asked you to enter";
					mes "an amount no greater";
					mes "than 100, remember...?";
					next;
				}
				else {
					break;
				}
			}

			if (.@gems > .@input) {
				delitem getarg(0),.@input * 2;
				getitem getarg(1),.@input;
				mes "[Jade]";
				mes "There you go.";
				mes "Feel free to come";
				mes "back any time.";
				mes "Hm, what's that look for?";
				mes "Is there something on my face?";
			}
			close;
		case 3:
			mes "[Jade]";
			mes "Sure, no problem.";
			mes "Come back any time.";
			close;
		}
	}
}
